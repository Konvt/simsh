<statement> ::= <expression> <statement_extension>
              | <output_redirection> <statement_extension>
              | '(' <inner_statement> <statement_extension>
              | '!' <logical_not> <statement_extension>
              | '\n'
              | EOF

<statement_extension> ::= <connector> <statement>
                     | <redirection> <statement_extension>
                     | '\n'
                     | EOF

<inner_statement> ::= <expression> <inner_statement_extension>
                     | <output_redirection> <inner_statement_extension>
                     | '!' <logical_not> <inner_statement_extension>
                     | '(' <inner_statement> <inner_statement_extension>

<inner_statement_extension> ::= <connector> <inner_statement>
                 | <redirection> <inner_statement_extension>
                 | ';' <inner_statement>
                 | ';' ')'
                 | ')'

<logical_not> ::= <expression>
                | '(' <inner_statement>

<connector> ::= '&&'
              | '||'
              | '|'
              | ';'

<redirection> ::= <output_redirection>
                | <input_redirection>

<output_redirection> ::= (\d*)&>{1,2} <expression>
                       | (\d*)>{1,2} <expression>

<input_redirection> ::= < <expression>

<expression> ::= [A-Za-z0-9_., +-*/@:]+
